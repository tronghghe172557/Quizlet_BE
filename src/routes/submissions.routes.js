import { Router } from 'express';
import { 
  submitQuiz, 
  getUserSubmissions, 
  getQuizSubmissions, 
  getSubmissionById,
  getQuizStats,
  getAllSubmissionsAdmin,
  getContributionGraph,
  getContributionStreaks,
  getContributionSummary
} from '../controllers/submissions.controller.js';
import { authenticate, optionalAuth, requireRole, requireAdmin } from '../middlewares/auth.js';
import { asyncHandler } from '../helpers/asyncHandle.js';

const router = Router();

// POST /api/submissions - Ná»™p bÃ i quiz (chá»‰ user vÃ  admin)
router.post('/', authenticate, requireRole('user', 'admin'), asyncHandler(submitQuiz));

// GET /api/submissions - Láº¥y submissions cá»§a user hiá»‡n táº¡i
router.get('/', authenticate, asyncHandler(getUserSubmissions));

// ðŸŽ¯ CONTRIBUTION GRAPH APIs - GitHub-style learning analytics
// GET /api/submissions/contributions/graph - Láº¥y dá»¯ liá»‡u contribution graph
router.get('/contributions/graph', authenticate, asyncHandler(getContributionGraph));

// GET /api/submissions/contributions/streaks - Láº¥y thÃ´ng tin streak (chuá»—i ngÃ y liÃªn tiáº¿p)
router.get('/contributions/streaks', authenticate, asyncHandler(getContributionStreaks));

// GET /api/submissions/contributions/summary - Láº¥y tá»•ng quan thá»‘ng kÃª contributions
router.get('/contributions/summary', authenticate, asyncHandler(getContributionSummary));

// GET /api/submissions/:id - Láº¥y chi tiáº¿t submission (owner hoáº·c admin)
router.get('/:id', authenticate, asyncHandler(getSubmissionById));

// GET /api/submissions/quiz/:quizId - Láº¥y táº¥t cáº£ submissions cá»§a quiz (chá»‰ admin hoáº·c quiz owner)
router.get('/quiz/:quizId', authenticate, asyncHandler(getQuizSubmissions));

// GET /api/submissions/quiz/:quizId/stats - Láº¥y thá»‘ng kÃª submissions cá»§a má»™t quiz (public)
router.get('/quiz/:quizId/stats', asyncHandler(getQuizStats));

// Admin routes
router.get('/admin/all', authenticate, requireAdmin, asyncHandler(getAllSubmissionsAdmin));

export default router;